name: Deploy to MGKE

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Deploy to Environment:'     
        required: true
        default: 'DEV' 
        type: choice
        options:
        - DEV
        - TEST
        - STAGE
        - PROD
      comments:
        description: 'Deployment comments:'
        required: false
        default: 'deploying artifact '

env:
  IMAGE_NAME: gohelloworld
  IMAGE_VERSION: v${{ github.run_number }}.${{ github.run_attempt }}
  APP_GITHUB_TOKEN: ${{ secrets.APP_GITHUB_TOKEN }}
  ARTIFACTORY_HOST: https://artifactory.build.ingka.ikea.com/artifactory
  ARTIFACTORY_IMAGEPATH: artifactory.build.ingka.ikea.com/ingka-docker-shared-local/go-hello-world/releases
  ARTIFACTORY_USER: ${{ secrets.ARTIFACTORYUSER }}
  ARTIFACTORY_PASS: ${{ secrets.ARTIFACTORYPASS }}

jobs:
  deploy-artifact:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from github repository
      # To include the history and tags, specify the fetch-depth parameter in your checkout action declaration. 
      # Specify zero to pull the full history and tags.
      - name: Checkout the code ðŸ›Ž
        id: code-checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set env varialbles
        run: echo "IMAGE_VERSION=${{ github.ref }}" | sed -e "s/refs\/tags\///g" | sed -e "s/\//-/g" >> $GITHUB_ENV

      - name: Replace tokens in deployment yml
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["k8s/*.yml"]'
          tokenPrefix: __ # optional, default is #{
          tokenSuffix: __ # optional, default is }#
        env:
          ARTIFACTORY_IMAGEPATH: ${{ env.ARTIFACTORY_IMAGEPATH }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}

      - run: |
          echo "Environment: $ENV"
          echo "Comments: $COMMENTS"
          echo "Image version: $IMAGE_VERSION"
          echo "Repo url: $ARTIFACTORY_IMAGEPATH:$IMAGE_NAME-$IMAGE_VERSION"
        env:
          ENV: ${{ inputs.env }}
          COMMENTS: ${{ inputs.comments }}