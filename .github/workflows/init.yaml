name: Release project code

on:
  push:
    branches: [main]
    paths:
      - 'src/**'

env:
  IMAGE_TAG: gohelloworld
  IMAGE_VERSION: v${{ github.run_number }}.${{ github.run_attempt }}
  APP_GITHUB_TOKEN: ${{ secrets.APP_GITHUB_TOKEN }}
  ARTIFACTORY_HOST: https://artifactory.build.ingka.ikea.com/artifactory
  ARTIFACTORY_IMAGEPATH: artifactory.build.ingka.ikea.com/ingka-docker-shared-local/go-hello-world/releases
  ARTIFACTORY_USER: ${{ secrets.ARTIFACTORYUSER }}
  ARTIFACTORY_PASS: ${{ secrets.ARTIFACTORYPASS }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # Checkout the code from github repository
      # To include the history and tags, specify the fetch-depth parameter in your checkout action declaration. 
      # Specify zero to pull the full history and tags.
      - name: Checkout the code 🛎
        id: code-checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      # This action produces a semantic version for a repository using the repository's 
      # git history without ever requiring a human to choose or 
      # manually assign the version number.
      - name: Version the app 👩‍💻
        id: code-version
        uses: paulhatch/semantic-version@v4.0.3
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          short_tags: false
          bump_each_commit: true

      # Set the image version as an environment variable
      - name: Set env varialbles
        run: echo "IMAGE_VERSION=v${{steps.code-version.outputs.version}}" >> $GITHUB_ENV
      
      # Tag the commit with the version number derived above.
      # Needs github token to create the tag
      - name: Tag the commit with the version 🏷
        uses: negz/create-tag@v1
        with:
          version: "${IMAGE_VERSION}"
          message: ""
          token: ${{ secrets.github_token }}

      # Docker release starts
      # Login to Docker
      - name: Login to Docker 🐋
        run: docker login $ARTIFACTORY_HOST -u $ARTIFACTORY_USER -p $ARTIFACTORY_PASS

      # Build the docker image
      - name: Build the docker image 🐋
        run: docker image build --tag ${ARTIFACTORY_IMAGEPATH}:${IMAGE_TAG}-${IMAGE_VERSION} .

      # Push the docker image
      - name: Push the docker image 🐋
        run: docker push ${ARTIFACTORY_IMAGEPATH}:${IMAGE_TAG}-${IMAGE_VERSION}